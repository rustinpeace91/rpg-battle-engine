{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/logic/dice.js","webpack:///./src/logic/weapons.js","webpack:///./src/logic/armor.js","webpack:///./src/logic/character.js","webpack:///./src/logic/charactergen.js","webpack:///./src/interface/dom.js","webpack:///./src/logic/combat.js","webpack:///./src/logic/classes.js","webpack:///./src/logic/gameloop.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dice","throwD4","improvedNum","Math","random","floor","throwD6","throwD8","throwD12","throwD10","throwD20","[object Object]","dieType","quantity","total","logic_dice","weapons","list","weapon","unarmed","type","weight","toAttack","range","damage","parseInt","longsword","club","spear","battleaxe","multiroll","generateList","this","push","logic_armor","unarmored","toAC","leather","chain","plate","character","main","HP","alive","baseAC","armor","AC","exp","level","lastlevel","nextLevel","lastLevel","gainexp","gained","restat","levelup","takeHit","console","log","charactergen","generateHero","profession","selector","length","hero","generateEnemy","difficulty","enemy","interface_dom","updateConsole","input","node","document","createElement","textNode","createTextNode","appendChild","getElementById","scrollTo","scrollHeight","updateHUD","innerHTML","gameloop","player","classButton","characterClass","logic_combat","attack","attacker","defender","fight","xpgained","logic_classes","url","game","init","forEach","e","addEventListener","event"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// The Dice object. handles all the dice rolling needed for the D20 System. Returns random rolls between numbers\n// also has a multiroll method, for rolling multiple dice. \n\n\nvar dice = {\n    throwD4: function () {\n        var randomNumber = Math.random();\n        var improvedNum = (randomNumber * 4) + 1;\n        var final = Math.floor(improvedNum);\n        return final;\n    },\n\n    throwD6: function() {\n        var randomNumber = Math.random();\n        var improvedNum = (randomNumber * 6) + 1;\n        var final = Math.floor(improvedNum);\n        return final;\n    },\n\n    throwD8: function(){\n        var randomNumber = Math.random();\n        var improvedNum = (randomNumber * 8) + 1;\n        var final = Math.floor(improvedNum);\n        return final;\n    },\n\n    throwD12: function(){\n        var randomNumber = Math.random();\n        var improvedNum = (randomNumber * 12) + 1;\n        var final = Math.floor(improvedNum);\n        return final;\n    },\n\n    throwD10: function() {\n        var randomNumber = Math.random();\n        var improvedNum = (randomNumber * 10) + 1;\n        var final = Math.floor(improvedNum);\n        return final;\n    },\n\n    throwD20: function() {\n        var randomNumber = Math.random();\n        var improvedNum = (randomNumber * 20) + 1;\n        var final = Math.floor(improvedNum);\n        return final;\n    },\n    multiroll(dieType, quantity) {\n        var total = 0;\n        for(var i = 0; i < quantity; i++){\n            total += dice[dieType]();\n        }\n        return total;\n    }\n};\n\n\nexport default dice;","import dice from \"./dice\";\n\nvar armory = {\n     // weapons list array, used to select random weapons\n     list: [],\n     \n     // weapon objects and their properties\n     weapon : {\n        unarmed: {\n            name: \"unarmed\",\n            type: \"punching\",\n            weight: 0,\n            toAttack: 0,\n            range: 1,\n            // damage is calculated by a roll of the dice\n            damage: function(){\n                return parseInt(dice.throwD4() / 2)\n            }\n        },\n        longsword: {\n            name: \"longsword\",\n            type: \"slashing\",\n            weight: 5,\n            toAttack: 0,\n            range: 1,\n            damage: function() {\n            return dice.throwD8()\n            }\n\n        },\n\n        club: {\n            name: \"club\",\n            type: \"crushing\",\n            weight:10,\n            toAttack:0,\n            range:1,\n            damage: function(){\n            return dice.throwD4() + 2\n            }\n        },\n\n        spear: {\n            name: \"spear\",\n            type:\"piercing\",\n            weight:4,\n            toAttack: 1,\n            range: 2,\n            damage: function(){\n                return dice.throwD6()\n            }  \n        },\n\n        battleaxe: {\n            name:\"battleaxe\",\n            type:\"cushing\",\n            weight:5,\n            toAttack:0,\n            range:1,\n            damage: function(){\n                return (dice.multiroll(\"throwD4\", 2));\n            }\n        }\n    },\n\n    // populates the weapon list \n    generateList: function(){\n        for(var key in this.weapon){\n           this.list.push(this.weapon[key].name);\n        }\n    }\n};\n\n// runs generate list right when the file is called (will be depreciated later for a cleaner solution )\n\nexport default armory;","import armory from \"./weapons\";\n\nvar armor = {\n    unarmored: {\n        name: \"unarmored\",\n        toAC: 0\n    },\n    leather: {\n        name: \"leather\",\n        toAC: 1\n    },\n\n    chain: {\n        name: \"chain\",\n        toAC: 2\n    },\n\n    plate: {\n        name: \"plate\",\n        toAC: 3,\n    }\n}\n\nexport default armor;","//the character constructor of the game.  Includes all the necessary stats that each character has\nimport armor from \"./armor\";\nimport armory from \"./weapons\";\n\nvar CharSheet = function(name, main, HP){\n    this.name = name;\n    this.main = main;\n    //DEFENSIVE INFORMATION//\n    this.alive = true;\n    this.baseAC = 10;\n    this.HP = HP;\n    this.armor = armor.unarmored;\n    this.AC = this.baseAC + this.armor.toAC;\n    //OFFENSIVE INFORMATION\n    this.weapon = armory.weapon.unarmed;\n    this.toAttack = this.weapon.toAttack;\n    //ABILITIES//\n        //not developed yet;\n        //this.stats = {};\n    //LEVEL PROGRESSION//\n    this.exp = 0;\n    this.level = 1;\n    this.lastlevel = 1;\n    this.nextLevel = this.lastLevel + (this.level * 1000);\n\n    //gained exp is added\n    this.gainexp = function(gained){\n        this.exp += gained;\n        \n    };\n    //all stats that are derived from other stats are recalculated\n    this.restat = function(gained){\n        this.AC = this.baseAC +this.armor.toAC;\n        this.toAttack = this.weapon.toAttack;\n    }\n\n    this.levelup = function(){\n \n    };\n    this.takeHit = function(damage){\n        this.HP -= damage;\n        if(this.HP <= 0){\n            this.alive = false;\n            console.log(this.name + \" has died\");\n        }\n    };\n\n\n};\n\n\n\nexport default CharSheet;\n\n\n//--------------------------------TESTING--------------------------//\n\n\n\n\n\n\n\n\n\n\n//name, main, AC, HP, stats, weapon, armor","//is used to generate the stats of characters\n//should include a way of selecting weapons, stats, HP and Health\n//differentiate betwen NPCs and Players\n\n\n// differentiate between enemies of different difficulty levels\n\n//NOTE: LOOK INTO ES6 CLASSES AND FUNCTIONS. IT WILL HELP A LOT WITH THIS\nimport CharSheet from \"./character\";\nimport armory from \"./weapons\";\nimport armor from \"./armor\";\nimport dice from \"./dice\";\n\nvar charGen = {\n    generateHero: function(name, profession, level){\n        var selector = parseInt((Math.random() * armory.list.length));\n        var HP = 10;\n        // creates hero object\n        var hero = new CharSheet(name, true, 10);\n        // PROFESSION (class) SYSTEM\n        hero.profession = profession;\n        switch(profession){\n            case \"swordsman\" :\n                hero.armor = armor.leather;\n                hero.weapon = armory.weapon.longsword;\n                hero.HP += dice.throwD6();\n                hero.restat();\n                break;\n            case \"pikeman\":\n                hero.armor = armor.leather;\n                hero.weapon = armory.weapon.spear;\n                console.log(hero.HP);\n                hero.HP += dice.throwD6();\n                hero.restat();\n                break;\n            case \"brawler\":\n                hero.HP += dice.throwD10();\n                break;\n            case \"peasent with a stick\":\n                hero.HP += dice.throwD6();\n                hero.weapon = armory.weapon.club;\n                hero.restat();\n                break;\n            case \"random\":\n                hero.HP +=dice.throwD6();\n                hero.AC += hero.AC + dice.throwD4();\n                hero.weapon = armory.weapon[armory.list[selector]];\n                hero.restat();\n            default:\n                console.log(\"not valid profession\");\n                console.log(profession);\n                break;\n\n        }\n        return hero;\n        \n    },\n\n    // enemy creation method\n    generateEnemy: function(name, difficulty){\n        // randomly selects a weapon\n        var selector = parseInt((Math.random() * armory.list.length));\n        // HP = d6 rolled the amount of times of the difficulty number\n        var HP = dice.multiroll(\"throwD6\", difficulty);\n        var enemy = new CharSheet(\"bad guy\", false, HP);\n        enemy.weapon = armory.weapon[armory.list[selector]];\n        return enemy;\n\n    }\n};\n\nexport default charGen;","// instead of relying on JQuery for DOM updates I decided to write my own DOM update object. The reason for this is because this game is running these modules entirely on the front end.\n// I thought it would be best to minimalize the amount of code required to run the app. Instead of a library of front end objects and methods, a single file with a few methods does the trick just fine\n// Might rename this to DUO (document update object)\n\nimport combat from \"../logic/combat\";\nimport game from \"../logic/gameloop\";\nvar dom = {\n    updateConsole: function(input) {\n        var node = document.createElement(\"P\");\n        var textNode = document.createTextNode(input);\n        node.appendChild(textNode);\n        console.log(node);\n        document.getElementById(\"fight-console\").appendChild(node);  \n        document.getElementById(\"fight-console\").scrollTo(0, document.getElementById(\"fight-console\").scrollHeight);\n\n    },\n    updateHUD: function(){\n        document.getElementById(\"player-name\").innerHTML = game.player.name;\n        document.getElementById(\"player-profession\").innerHTML = game.player.profession;\n        document.getElementById(\"player-defense-rating\").innerHTML = game.player.AC;\n        document.getElementById(\"player-hp\").innerHTML = game.player.HP;\n        document.getElementById(\"player-armor\").innerHTML = game.player.armor.name;\n        document.getElementById(\"player-weapon\").innerHTML = game.player.weapon.name;\n        document.getElementById(\"player-accuracy-bonus\").innerHTML = game.player.toAttack;\n        document.getElementById(\"player-xp\").innerHTML = game.player.exp;\n        document.getElementById(\"player-level\").innerHTML = game.player.level;\n\n    }, \n    classButton: function(characterClass){\n        var node = document.createElement(\"BUTTON\");\n        var textNode = document.createTextNode(characterClass);\n        node.appendChild(textNode);\n        document.getElementById(\"class-panel\").appendChild(node);\n    }\n}\n\nexport default dom;","// combat loop: handles both a single attack and a single round of combat between two combatants\nimport charGen from \"./charactergen\";\nimport dom from \"../interface/dom\";\nimport dice from \"./dice\";\n\nvar combat = {\n        attack: function(attacker, defender){\n            var roll = dice.throwD20() + attacker.toAttack;\n            // dom.updateConsole(attacker.name + \" rolled \" + roll +\" to hit\" );\n            if(roll >= defender.AC){\n                // damage is calculated via a wepaon method wihich rolls the dice.\n                var damage = attacker.weapon.damage();\n                dom.updateConsole(attacker.name + \" has hit \" + defender.name + \" for \" + damage+ \" damage\");\n                // damage is dealt in the character object using the \"takeHit\" method\n                defender.takeHit(damage);\n            } else {\n                dom.updateConsole(attacker.name + \" missed\");\n            };\n\n        },\n\n        fight: function(player,enemy){\n            // player attacks first (no initiative system yet)\n            this.attack(player,enemy);\n            if(enemy.alive === true){\n            // if the enemy is still alive, enemy attacks player\n                this.attack(enemy,player);\n            } else {\n            // if enemy is dead, player gains experience points\n                dom.updateConsole(enemy.name + \" has died\")\n                var xpgained = 50 + (2 * enemy.HP);\n                player.exp += xpgained;\n                dom.updateConsole(\"player earned \"  + xpgained + \" exp and has a total of \" + player.exp + \" exp\")\n            };\n            // if both player and enemy are alive, their HP is displayed to the console.\n            if(player.alive === true && enemy.alive === true){\n                dom.updateConsole(player.name + \" has \" + player.HP + \" HP left\");\n                dom.updateConsole(enemy.name + \" has \" + enemy.HP + \" HP left\");\n            }\n            dom.updateConsole(\"-----------------------------------------------------------------------\");\n            dom.updateHUD();\n        },\n\n\n    \n\n    };\n\nexport default combat;\n","\n\nvar classes = [\n    { \n        name: \"swordsman\",\n        url: \"assets/\"\n    },\n    { \n        name: \"pikeman\",\n        url: \"assets/\"\n    },\n    { \n        name: \"brawler\",\n        url: \"assets/\"\n    },\n    { \n        name: \"peasent with a stick\",\n        url: \"assets/\"\n    },\n    { \n        name: \"random\",\n        url: \"assets/\"\n    },\n\n]\n\nexport default classes;","// main game loop. plan on splitting much of this up into seperate modules or methods, but for now it just runs the combat loop when the user clicks the fight button\nimport combat from \"./combat\";\nimport charGen from \"./charactergen\";\nimport dom from \"../interface/dom\";\nimport classes from \"./classes\";\nvar game = {\n    player: {},\n    enemy: {},\n    init: function(){\n        // when the function runs, both a new player character and a new enemy spawn with random weapons and HP\n        classes.forEach(function(e){\n            dom.classButton(e.name);\n        })\n        this.player = charGen.generateHero(\"player\", \"random\", 1);\n        this.enemy = charGen.generateEnemy(\"bad guy\", 3);\n        // REMOVE //\n        console.log(this.player);\n        console.log(this.enemy);\n        //REMOVE//\n        // hud and fightconsole are updated with the new character info \n        dom.updateConsole(\"Youve spawned with \" + this.player.HP + \" hit points armed with a \" + this.player.weapon.name);\n        dom.updateConsole(\"In front of you stands a \" + this.enemy.name + \" with a \" + this.enemy.weapon.name)\n        dom.updateHUD();\n\n        // runs a combat loop every time the player clicks fight\n        document.getElementById(\"fight\").addEventListener(\"click\", function(event){\n            combat.fight(game.player,game.enemy);\n            \n            // need to consolidate this if statement with the if statement in the combat loop. It doesn't make sense to have two  if statements that check for the same thing in two files\n            if(game.player.alive === false){\n                dom.updateConsole(game.player.name + \" has died\")\n                dom.updateConsole(\"-----------------------------------------------------------------------\")\n                game.init();\n            }else if (game.enemy.alive === false){\n                game.enemy = charGen.generateEnemy(\"bad guy\", 3)\n                console.log(game.enemy);\n                dom.updateConsole(\"a new bad guy appears\");\n                dom.updateConsole(\"In front of you stands a \" + game.enemy.name + \" with a \" + game.enemy.weapon.name);\n                dom.updateConsole(\"-----------------------------------------------------------------------\")\n            }\n        \n        });\n\n    }\n\n}\n\n//game initializes\nexport default game;\n","import armory from \"./logic/weapons\"\nimport game from \"./logic/gameloop\";\narmory.generateList();\ngame.init();"],"sourceRoot":""}